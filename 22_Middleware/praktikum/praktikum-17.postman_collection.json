{
	"info": {
		"_postman_id": "0ee6c2e9-b03b-4acd-8a8e-2a0e7286e594",
		"name": "praktikum-17",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23637484"
	},
	"item": [
		{
			"name": "register and login",
			"item": [
				{
					"name": "register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ivan\",\n    \"email\": \"ivan@email.com\",\n    \"password\": \"ivan123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response body data should contain userId', () => {",
									"    const responseJson = pm.response.json();",
									"    const { token } = responseJson;",
									"",
									"    pm.expect(token).to.not.equals('');",
									"",
									"    pm.environment.set('token', token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user.email}}\",\n    \"password\": \"{{user.password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test('response body data should contain bookId', () => {",
									"    const responseJson = pm.response.json();",
									"    const { user } = responseJson;",
									"",
									"    pm.expect(user).to.haveOwnProperty('ID');",
									"    pm.expect(user.ID).to.not.equals('');",
									"",
									"    pm.environment.set('userId', user.ID);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"user3\",\n    \"email\": \"user3@email.com\",\n    \"password\": \"user3123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "put",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": ""
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": ""
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "books Copy",
			"item": [
				{
					"name": "post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response body data should contain userId', () => {",
									"    const responseJson = pm.response.json();",
									"    const { book } = responseJson;",
									"",
									"    pm.expect(book).to.haveOwnProperty('ID');",
									"    pm.expect(book.ID).to.not.equals('');",
									"",
									"    pm.environment.set('bookId', book.ID);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"book1\",\n    \"author\": \"author1\",\n    \"publisher\": \"publisher1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/books",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAll",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "getId",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "put",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"book1update\",\n    \"author\": \"author1\",\n    \"publisher\": \"publisher1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/books/{{book.id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"books",
								"{{book.id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8000/books/{{book.id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"books",
								"{{book.id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user.email",
			"value": "",
			"type": "string"
		},
		{
			"key": "user.password",
			"value": "",
			"type": "string"
		},
		{
			"key": "user.id",
			"value": "",
			"type": "string"
		},
		{
			"key": "book.id",
			"value": "",
			"type": "string"
		}
	]
}